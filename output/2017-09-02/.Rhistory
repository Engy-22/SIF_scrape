html_text()
line
html %>%
html_nodes(".Line") %>%
html_text()
html %>%
html_nodes("odds-details") %>%
html_text()
html %>%
html_nodes(".odds-details") %>%
html_text()
html %>%
html_nodes(".li") %>%
html_text()
html %>%
html_nodes(".ul") %>%
html_text()
html %>%
html_nodes("odds-details") %>%
html_text()
html %>%
html_nodes(".odds-details") %>%
html_text()
html %>%
html_nodes(".ul") %>%
html_text()
html %>%
html_nodes(xpath = '//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]') %>%
html_text()
egame_id
scores = html %>%
html_nodes(xpath = '//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div') %>%
html_text()
scores
html %>%
html_nodes('.team-name') %>%
html_text()
html %>%
html_nodes(xpath = '//*[@id="linescore"]/tbody/tr[1]/td[1]') %>%
html_text()
html %>%
html_nodes('//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div') %>%
html_text()
setwd("~/G_WD/SIF_scrape2")
library(stringr)
source("./R/functions/text.R")
line = text(xpath = '//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]'))
setwd("~/G_WD/SIF_scrape2")
library(stringr)
source("./R/functions/textx.R")
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]'))
line = text(xpath = '//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line
source('~/G_WD/SIF_scrape/r scripts/scrape.R')
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line
url  = "http://www.espn.com/college-football/game?gameId=400935257"
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line
html %>%
html_nodes(xpath = '//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div') %>%
html_text()
away_score = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div')
away_score
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
away_score = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div')
home_score = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[1]/div/div[3]/div')
line
home_score
away_score
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
home_score
url  = "http://www.espn.com/college-football/game?gameId=400935257"
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = textx('//*[@id="linescore"]/tbody/tr[1]/td[6]')
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
away_team
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = textx('//*[@id="linescore"]/tbody/tr[1]/td[6]')
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
paste(line, away_team, away_score, home_team, home_score)
paste(away_team, away_score, home_team, home_score, line)
setwd("~/G_WD/SIF_scrape2")
source("./R/functions/attr.R")
source("./R/functions/textx.R")
egame_id = as.integer(na.omit(attr(".scoreboard", "id")))
dat = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = textx('//*[@id="linescore"]/tbody/tr[1]/td[6]')
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
dat = append(dat, paste(away_team, away_score, home_team, home_score, line))
}
dat
i
egame_id
html = read_html('http://www.espn.com/college-football/scoreboard/_/year/2017/seasontype/2/week/1')
egame_id = as.integer(na.omit(attr(".scoreboard", "id")))
egame_id
str(html)
html %>%
html_nodes(".scoreboard") %>%
html_attr(".id")
html %>%
html_nodes(".scoreboard")
html = read_html('./espn.html')
egame_id = as.integer(na.omit(attr(".scoreboard", "id")))
egame_id
dat = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = textx('//*[@id="linescore"]/tbody/tr[1]/td[6]')
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
dat = append(dat, paste(away_team, away_score, home_team, home_score, line))
}
dat
dat = str_split_fixed(dat, " ", 6)
dat
dat = as.data.frame(str_split_fixed(dat, " ", 6), stringsAsFactors = FALSE)
dat
source('~/G_WD/SIF_scrape2/R/SIF_scrape2.R')
i
url
scores = as.data.frame(str_split_fixed(dat, " ", 6), stringsAsFactors = FALSE)
scores
scores = as.data.frame(str_split_fixed(scores, " ", 6), stringsAsFactors = FALSE)
scores
scores
scores = character()
scores
iter
scores = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = textx('//*[@id="linescore"]/tbody/tr[1]/td[6]')
home_score = textx('//*[@id="linescore"]/tbody/tr[2]/td[6]')
iter = paste(away_team, away_score, home_team, home_score, line)
scores = append(scores, iter)
print(iter)
}
scores
scores = as.data.frame(str_split_fixed(scores, " ", 6), stringsAsFactors = FALSE)
scores
colnames(scores) = c("away_team",
"away_score",
"home_team",
"home_score",
"favorite",
"final_spread")
scores
str(scores)
scores$final_spread = abs(as.numeric(scores$final_spread))
scores
str(scores)
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.factor)
str(scores)
colnames(scores) = c("away_team",
"away_score",
"home_team",
"home_score",
"favorite",
"final_spread")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
str(scores)
scores
source('~/G_WD/SIF_scrape2/R/SIF_scrape2.R')
scores
ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = scores$winner == scores$favorite
scores
scores$is.upset = scores$winner !== scores$favorite
scores$is.upset = scores$winner != scores$favorite
scores
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores
source('~/G_WD/SIF_scrape2/R/spreads.R')
dat
source('~/G_WD/SIF_scrape2/R/spreads.R')
dat
source('~/G_WD/SIF_scrape2/R/spreads.R')
espn_spreads = read.csv('espn.csv', stringsAsFactors = FALSE)
oddshark_spreads = read.csv('oddshark.csv', stringsAsFactors = FALSE)
source('~/G_WD/SIF_scrape2/R/spreads.R')
out_path
paste(out_path, "/scores.csv", sep = "")
source('~/G_WD/SIF_scrape2/R/spreads.R')
i
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
is.final = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, is.final)
iter
i = egame_id[1]
i
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
is.final = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, is.final)
iter
###############################################################################################
#                                           Scores                                            #
###############################################################################################
setwd("~/G_WD/SIF_scrape")
library(stringr)
source("./R/functions/attr.R")
source("./R/functions/textx.R")
out_path = paste("./output/", Sys.Date(), sep = '')
html = read_html('./espn.html')
egame_id = as.integer(na.omit(attr(".scoreboard", "id")))
scores = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
is.final = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, is.final)
scores = append(scores, iter)
print(iter)
}
scores = as.data.frame(str_split_fixed(scores, " ", 6), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, scores$is.final == "Final")
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores$update.ts = Sys.time()
scores
###############################################################################################
#                                           Scores                                            #
###############################################################################################
setwd("~/G_WD/SIF_scrape")
library(stringr)
source("./R/functions/attr.R")
source("./R/functions/textx.R")
out_path = paste("./output/", Sys.Date(), sep = '')
html = read_html('./espn.html')
egame_id = as.integer(na.omit(attr(".scoreboard", "id")))
dat = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
is.final = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, is.final)
scores = append(dat, iter)
print(iter)
}
scores = as.data.frame(str_split_fixed(dat, " ", 6), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "is.final")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores
dat
iter
dat = character()
dat
dat = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
is.final = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, is.final)
dat = append(dat, iter)
print(iter)
}
scores = as.data.frame(str_split_fixed(dat, " ", 6), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "is.final")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores
scores = as.data.frame(str_split_fixed(dat, " ", 7), stringsAsFactors = FALSE)
scores
str(scores)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "is.final")
scores
grepl("Final", scores$is.final)
scores = subset(scores, grepl("Final", scores$is.final))
scores
scores = as.data.frame(str_split_fixed(dat, " ", 7), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "is.final")
scores = subset(scores, grepl("Final", scores$is.final))
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, scores$is.final == "Final" | "Final/OT")
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores$update.ts = Sys.time()
scores = as.data.frame(str_split_fixed(dat, " ", 7), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "is.final")
scores = subset(scores, grepl("Final", scores$is.final))
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores$update.ts = Sys.time()
scores
upsets == subset(scores, scores$is.upset == TRUE)
upsets = subset(scores, scores$is.upset == TRUE)
upsets
write.csv(upsets, paste(out_path, "/upsets.csv", sep = ""), row.names = FALSE)
upsets
write.csv(scores, paste(out_path, "/scores.csv", sep = ""), row.names = FALSE)
dat = merge(espn_spreads, oddshark_spreads, by = 'game_id', all = TRUE)
dat
espn_spreads
oddshark_spreads
write.csv(dat, "spreads.csv", row.names = FALSE)
list.files()
setwd(out_path)
write.csv(dat, "spreads.csv", row.names = FALSE)
i
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
status = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, status)
status
i = egame_id[3]
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
status = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(away_team, away_score, home_team, home_score, line, status)
status
dat = character()
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
status = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(i, away_team, away_score, home_team, home_score, line, status)
dat = append(dat, iter)
print(iter)
}
scores = as.data.frame(str_split_fixed(scores, " ", 8), stringsAsFactors = FALSE)
scores
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
scores
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, grepl("Final", scores$status))
scores
grepl("Final", scores$status)
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scorew
scores
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("egame_id", "away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scores
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("egame_id", "away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, grepl("Final", scores$status))
scores
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("egame_id", "away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, grepl("Final", scores$status))
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores$update.ts = Sys.time()
scores
upsets = subset(scores, scores$is.upset == TRUE)
upsets
map = read.csv('map1.csv', header = TRUE, stringsAsFactors = FALSE)
list.files
list.files()
setwd("~/G_WD/SIF_scrape")
map = read.csv('map1.csv', header = TRUE, stringsAsFactors = FALSE)
str(map)
scores = as.data.frame(str_split_fixed(dat, " ", 8), stringsAsFactors = FALSE)
colnames(scores) = c("egame_id", "away_team", "away_score", "home_team", "home_score",
"favorite", "final_spread", "status")
scores[,c("away_score", "home_score", "final_spread")] = lapply(
scores[,c("away_score", "home_score", "final_spread")], as.numeric)
scores$final_spread = abs(scores$final_spread)
scores = subset(scores, grepl("Final", scores$status))
scores$winner = ifelse(scores$away_score > scores$home_score, scores$away_team, scores$home_team)
scores$is.upset = as.numeric(scores$winner != scores$favorite)
scores$update.ts = Sys.time()
map = read.csv('map1.csv', header = TRUE, stringsAsFactors = FALSE)
scores = merge(map[,1:2], scores, by = "egame_id")
upsets = subset(scores, scores$is.upset == TRUE)
scores
upsets
source('~/G_WD/SIF_scrape/R/sif_scrape.R')
textx("//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span[2]")
textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span[2]')
url
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
status = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span[2]')
iter = paste(i, away_team, away_score, home_team, home_score, line, status)
dat = append(dat, iter)
print(iter)
}
for(i in egame_id) {
url  = paste("http://www.espn.com/college-football/game?gameId=", i, sep = "")
html = read_html(url)
line = textx('//*[@id="gamepackage-game-information"]/article/div/div[2]/div[1]/ul/li[1]')
line = gsub("Line: ", "", line)
away_team = textx('//*[@id="linescore"]/tbody/tr[1]/td[1]')
home_team = textx('//*[@id="linescore"]/tbody/tr[2]/td[1]')
away_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[1]/td[6]'))
home_score = as.numeric(textx('//*[@id="linescore"]/tbody/tr[2]/td[6]'))
status = textx('//*[@id="gamepackage-matchup-wrap"]/header/div/div[2]/span')
iter = paste(i, away_team, away_score, home_team, home_score, line, status)
dat = append(dat, iter)
print(iter)
}
